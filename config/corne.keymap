/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHIFT        &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp LBKT  &kp QUESTION
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp RBKT  &kp ESC
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB            &trans  &kp N5    &kp NUMBER_1    &kp NUMBER_2  &kp N5       &kp EQUAL  &kp N7        &kp N8         &kp N9        &kp N0        &kp BSPC
&kp LEFT_SHIFT     &trans  &kp N7    &kp N0          &kp NUMBER_6  &kp N0       &kp MINUS  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp ASTERISK  &trans
&kp RIGHT_CONTROL  &trans  &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT    &kp PLUS   &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp SLASH     &trans
                                     &kp LGUI        &trans        &kp SPACE    &kp RET    &mo 3         &kp RIGHT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB           &kp EXCL  &kp DOUBLE_QUOTES  &kp HASH  &kp DLLR  &kp PRCNT    &kp AMPERSAND  &kp SQT    &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS  &kp AT_SIGN  &kp BSPC
&kp LSHIFT        &trans    &trans             &trans    &trans    &trans       &kp MINUS      &kp EQUAL  &kp LBKT                 &kp RBKT               &kp BSLH     &kp GRAVE
&kp LEFT_CONTROL  &trans    &trans             &trans    &trans    &trans       &kp UNDER      &kp PLUS   &kp LBRC                 &kp RBRC               &kp PIPE     &kp TILDE
                                               &kp LGUI  &trans    &kp SPACE    &kp RET        &trans     &kp LANG_ZENKAKUHANKAKU
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOL_DN  &kp C_VOLUME_UP    &kp LANGUAGE_6  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL 4       &kp LANGUAGE_5  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans                &trans                &trans        &trans             &trans          &trans  &trans  &trans  &trans  &trans
                                                &trans                &trans        &trans             &trans          &trans  &trans
            >;
        };
    };
};
